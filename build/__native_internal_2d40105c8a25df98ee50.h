#ifndef MYPYC_NATIVE_INTERNAL_2d40105c8a25df98ee50_H
#define MYPYC_NATIVE_INTERNAL_2d40105c8a25df98ee50_H
#include <Python.h>
#include <CPy.h>
#include "__native_2d40105c8a25df98ee50.h"

int CPyGlobalsInit(void);

extern PyObject *CPyStatics[402];
extern const char * const CPyLit_Str[];
extern const char * const CPyLit_Bytes[];
extern const char * const CPyLit_Int[];
extern const double CPyLit_Float[];
extern const double CPyLit_Complex[];
extern const int CPyLit_Tuple[];
extern const int CPyLit_FrozenSet[];
extern CPyModule *CPyModule_faster_eth_utils___abi_internal;
extern CPyModule *CPyModule_faster_eth_utils___abi;
extern PyObject *CPyStatic_abi___globals;
extern CPyModule *CPyModule_builtins;
extern CPyModule *CPyModule_typing;
extern CPyModule *CPyModule_faster_eth_utils___crypto;
extern CPyModule *CPyModule_faster_eth_utils___address_internal;
extern CPyModule *CPyModule_faster_eth_utils___address;
extern PyObject *CPyStatic_address___globals;
extern CPyModule *CPyModule_re;
extern CPyModule *CPyModule_eth_typing;
extern CPyModule *CPyModule_typing_extensions;
extern CPyModule *CPyModule_faster_eth_utils___conversions_internal;
extern CPyModule *CPyModule_faster_eth_utils___conversions;
extern CPyModule *CPyModule_faster_eth_utils___hexadecimal_internal;
extern CPyModule *CPyModule_faster_eth_utils___hexadecimal;
extern CPyModule *CPyModule_faster_eth_utils___types_internal;
extern CPyModule *CPyModule_faster_eth_utils___types;
extern CPyModule *CPyModule_faster_eth_utils___applicators_internal;
extern CPyModule *CPyModule_faster_eth_utils___applicators;
extern PyObject *CPyStatic_applicators___globals;
extern CPyModule *CPyModule_warnings;
extern CPyModule *CPyModule_faster_eth_utils___decorators_internal;
extern CPyModule *CPyModule_faster_eth_utils___decorators;
extern CPyModule *CPyModule_faster_eth_utils___functional_internal;
extern CPyModule *CPyModule_faster_eth_utils___functional;
extern CPyModule *CPyModule_faster_eth_utils___toolz;
extern PyObject *CPyStatic_conversions___globals;
extern CPyModule *CPyModule_faster_eth_utils___encoding_internal;
extern CPyModule *CPyModule_faster_eth_utils___encoding;
extern CPyModule *CPyModule_faster_eth_utils___currency_internal;
extern CPyModule *CPyModule_faster_eth_utils___currency;
extern PyObject *CPyStatic_currency___globals;
extern CPyModule *CPyModule_decimal;
extern CPyModule *CPyModule_faster_eth_utils___units_internal;
extern CPyModule *CPyModule_faster_eth_utils___units;
extern CPyModule *CPyModule_faster_eth_utils___debug_internal;
extern CPyModule *CPyModule_faster_eth_utils___debug;
extern PyObject *CPyStatic_debug___globals;
extern CPyModule *CPyModule_platform;
extern CPyModule *CPyModule_subprocess;
extern CPyModule *CPyModule_sys;
extern PyObject *CPyStatic_decorators___globals;
extern CPyModule *CPyModule_functools;
extern CPyModule *CPyModule_itertools;
extern CPyModule *CPyModule_os;
extern PyObject *CPyStatic_encoding___globals;
extern CPyModule *CPyModule_faster_eth_utils___exceptions_internal;
extern CPyModule *CPyModule_faster_eth_utils___exceptions;
extern PyObject *CPyStatic_exceptions___globals;
extern PyObject *CPyStatic_functional___globals;
extern CPyModule *CPyModule_collections;
extern PyObject *CPyStatic_hexadecimal___globals;
extern CPyModule *CPyModule_binascii;
extern CPyModule *CPyModule_faster_eth_utils___humanize_internal;
extern CPyModule *CPyModule_faster_eth_utils___humanize;
extern PyObject *CPyStatic_humanize___globals;
extern CPyModule *CPyModule_urllib;
extern CPyModule *CPyModule_faster_eth_utils___module_loading_internal;
extern CPyModule *CPyModule_faster_eth_utils___module_loading;
extern PyObject *CPyStatic_module_loading___globals;
extern CPyModule *CPyModule_importlib;
extern PyObject *CPyStatic_types___globals;
extern CPyModule *CPyModule_collections___abc;
extern CPyModule *CPyModule_numbers;
extern PyObject *CPyStatic_units___globals;
extern PyObject *CPyDef_abi___collapse_if_tuple(PyObject *cpy_r_abi);
extern PyObject *CPyPy_abi___collapse_if_tuple(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_abi____abi_to_signature(PyObject *cpy_r_abi);
extern PyObject *CPyPy_abi____abi_to_signature(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_abi___function_signature_to_4byte_selector(PyObject *cpy_r_event_signature);
extern PyObject *CPyPy_abi___function_signature_to_4byte_selector(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_abi___function_abi_to_4byte_selector(PyObject *cpy_r_function_abi);
extern PyObject *CPyPy_abi___function_abi_to_4byte_selector(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_abi___event_signature_to_log_topic(PyObject *cpy_r_event_signature);
extern PyObject *CPyPy_abi___event_signature_to_log_topic(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_abi___event_abi_to_log_topic(PyObject *cpy_r_event_abi);
extern PyObject *CPyPy_abi___event_abi_to_log_topic(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_abi_____top_level__(void);
extern PyObject *CPyStatic_address____HEX_ADDRESS_REGEXP;
extern char CPyDef_address___is_hex_address(PyObject *cpy_r_value);
extern PyObject *CPyPy_address___is_hex_address(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_address___is_binary_address(PyObject *cpy_r_value);
extern PyObject *CPyPy_address___is_binary_address(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_address___is_address(PyObject *cpy_r_value);
extern PyObject *CPyPy_address___is_address(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_address___to_normalized_address(PyObject *cpy_r_value);
extern PyObject *CPyPy_address___to_normalized_address(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_address___is_normalized_address(PyObject *cpy_r_value);
extern PyObject *CPyPy_address___is_normalized_address(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_address___to_canonical_address(PyObject *cpy_r_address);
extern PyObject *CPyPy_address___to_canonical_address(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_address___is_canonical_address(PyObject *cpy_r_address);
extern PyObject *CPyPy_address___is_canonical_address(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_address___is_same_address(PyObject *cpy_r_left, PyObject *cpy_r_right);
extern PyObject *CPyPy_address___is_same_address(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_address___to_checksum_address(PyObject *cpy_r_value);
extern PyObject *CPyPy_address___to_checksum_address(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_address___is_checksum_address(PyObject *cpy_r_value);
extern PyObject *CPyPy_address___is_checksum_address(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_address____is_checksum_formatted(PyObject *cpy_r_value);
extern PyObject *CPyPy_address____is_checksum_formatted(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_address___is_checksum_formatted_address(PyObject *cpy_r_value);
extern PyObject *CPyPy_address___is_checksum_formatted_address(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_address_____top_level__(void);
extern PyTypeObject *CPyType_applicators___apply_formatter_at_index_gen;
extern PyObject *CPyDef_applicators___apply_formatter_at_index_gen(void);
extern PyTypeObject *CPyType_applicators___apply_formatters_to_sequence_gen;
extern PyObject *CPyDef_applicators___apply_formatters_to_sequence_gen(void);
extern PyTypeObject *CPyType_applicators___apply_formatters_to_dict_gen;
extern PyObject *CPyDef_applicators___apply_formatters_to_dict_gen(void);
extern PyTypeObject *CPyType_applicators___apply_formatter_to_array_gen;
extern PyObject *CPyDef_applicators___apply_formatter_to_array_gen(void);
extern PyTypeObject *CPyType_applicators___apply_key_map_gen;
extern PyObject *CPyDef_applicators___apply_key_map_gen(void);
extern PyObject *CPyDef_applicators___apply_formatter_at_index_gen_____mypyc_generator_helper__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback, PyObject *cpy_r_arg);
extern PyObject *CPyDef_applicators___apply_formatter_at_index_gen_____next__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_applicators___apply_formatter_at_index_gen_____next__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_formatter_at_index_gen___send(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_arg);
extern PyObject *CPyPy_applicators___apply_formatter_at_index_gen___send(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_formatter_at_index_gen_____iter__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_applicators___apply_formatter_at_index_gen_____iter__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_formatter_at_index_gen___throw(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback);
extern PyObject *CPyPy_applicators___apply_formatter_at_index_gen___throw(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_formatter_at_index_gen___close(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_applicators___apply_formatter_at_index_gen___close(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_formatter_at_index(PyObject *cpy_r_formatter, CPyTagged cpy_r_at_index, PyObject *cpy_r_value);
extern PyObject *CPyPy_applicators___apply_formatter_at_index(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___combine_argument_formatters(PyObject *cpy_r_formatters);
extern PyObject *CPyPy_applicators___combine_argument_formatters(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_formatters_to_sequence_gen_____mypyc_generator_helper__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback, PyObject *cpy_r_arg);
extern PyObject *CPyDef_applicators___apply_formatters_to_sequence_gen_____next__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_applicators___apply_formatters_to_sequence_gen_____next__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_formatters_to_sequence_gen___send(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_arg);
extern PyObject *CPyPy_applicators___apply_formatters_to_sequence_gen___send(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_formatters_to_sequence_gen_____iter__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_applicators___apply_formatters_to_sequence_gen_____iter__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_formatters_to_sequence_gen___throw(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback);
extern PyObject *CPyPy_applicators___apply_formatters_to_sequence_gen___throw(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_formatters_to_sequence_gen___close(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_applicators___apply_formatters_to_sequence_gen___close(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_formatters_to_sequence(PyObject *cpy_r_formatters, PyObject *cpy_r_sequence);
extern PyObject *CPyPy_applicators___apply_formatters_to_sequence(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_formatter_if(PyObject *cpy_r_condition, PyObject *cpy_r_formatter, PyObject *cpy_r_value);
extern PyObject *CPyPy_applicators___apply_formatter_if(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_formatters_to_dict_gen_____mypyc_generator_helper__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback, PyObject *cpy_r_arg);
extern PyObject *CPyDef_applicators___apply_formatters_to_dict_gen_____next__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_applicators___apply_formatters_to_dict_gen_____next__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_formatters_to_dict_gen___send(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_arg);
extern PyObject *CPyPy_applicators___apply_formatters_to_dict_gen___send(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_formatters_to_dict_gen_____iter__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_applicators___apply_formatters_to_dict_gen_____iter__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_formatters_to_dict_gen___throw(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback);
extern PyObject *CPyPy_applicators___apply_formatters_to_dict_gen___throw(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_formatters_to_dict_gen___close(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_applicators___apply_formatters_to_dict_gen___close(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_formatters_to_dict(PyObject *cpy_r_formatters, PyObject *cpy_r_value);
extern PyObject *CPyPy_applicators___apply_formatters_to_dict(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_formatter_to_array_gen_____mypyc_generator_helper__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback, PyObject *cpy_r_arg);
extern PyObject *CPyDef_applicators___apply_formatter_to_array_gen_____next__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_applicators___apply_formatter_to_array_gen_____next__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_formatter_to_array_gen___send(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_arg);
extern PyObject *CPyPy_applicators___apply_formatter_to_array_gen___send(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_formatter_to_array_gen_____iter__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_applicators___apply_formatter_to_array_gen_____iter__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_formatter_to_array_gen___throw(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback);
extern PyObject *CPyPy_applicators___apply_formatter_to_array_gen___throw(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_formatter_to_array_gen___close(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_applicators___apply_formatter_to_array_gen___close(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_formatter_to_array(PyObject *cpy_r_formatter, PyObject *cpy_r_value);
extern PyObject *CPyPy_applicators___apply_formatter_to_array(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_one_of_formatters(tuple_T1T2OO cpy_r_formatter_condition_pairs, PyObject *cpy_r_value);
extern PyObject *CPyPy_applicators___apply_one_of_formatters(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_key_map_gen_____mypyc_generator_helper__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback, PyObject *cpy_r_arg);
extern PyObject *CPyDef_applicators___apply_key_map_gen_____next__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_applicators___apply_key_map_gen_____next__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_key_map_gen___send(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_arg);
extern PyObject *CPyPy_applicators___apply_key_map_gen___send(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_key_map_gen_____iter__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_applicators___apply_key_map_gen_____iter__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_key_map_gen___throw(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback);
extern PyObject *CPyPy_applicators___apply_key_map_gen___throw(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_key_map_gen___close(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_applicators___apply_key_map_gen___close(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_applicators___apply_key_map(PyObject *cpy_r_key_mappings, PyObject *cpy_r_value);
extern PyObject *CPyPy_applicators___apply_key_map(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_applicators_____top_level__(void);
extern PyObject *CPyDef_conversions___to_hex(PyObject *cpy_r_primitive, PyObject *cpy_r_hexstr, PyObject *cpy_r_text);
extern PyObject *CPyPy_conversions___to_hex(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern CPyTagged CPyDef_conversions___to_int(PyObject *cpy_r_primitive, PyObject *cpy_r_hexstr, PyObject *cpy_r_text);
extern PyObject *CPyPy_conversions___to_int(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_conversions___to_bytes(PyObject *cpy_r_primitive, PyObject *cpy_r_hexstr, PyObject *cpy_r_text);
extern PyObject *CPyPy_conversions___to_bytes(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_conversions___to_text(PyObject *cpy_r_primitive, PyObject *cpy_r_hexstr, PyObject *cpy_r_text);
extern PyObject *CPyPy_conversions___to_text(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_conversions___text_if_str(PyObject *cpy_r_to_type, PyObject *cpy_r_text_or_primitive);
extern PyObject *CPyPy_conversions___text_if_str(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_conversions___hexstr_if_str(PyObject *cpy_r_to_type, PyObject *cpy_r_hexstr_or_primitive);
extern PyObject *CPyPy_conversions___hexstr_if_str(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_conversions_____top_level__(void);
extern CPyTagged CPyStatic_currency___denoms___wei;
extern CPyTagged CPyStatic_currency___denoms___kwei;
extern CPyTagged CPyStatic_currency___denoms___babbage;
extern CPyTagged CPyStatic_currency___denoms___femtoether;
extern CPyTagged CPyStatic_currency___denoms___mwei;
extern CPyTagged CPyStatic_currency___denoms___lovelace;
extern CPyTagged CPyStatic_currency___denoms___picoether;
extern CPyTagged CPyStatic_currency___denoms___gwei;
extern CPyTagged CPyStatic_currency___denoms___shannon;
extern CPyTagged CPyStatic_currency___denoms___nanoether;
extern CPyTagged CPyStatic_currency___denoms___nano;
extern CPyTagged CPyStatic_currency___denoms___szabo;
extern CPyTagged CPyStatic_currency___denoms___microether;
extern CPyTagged CPyStatic_currency___denoms___micro;
extern CPyTagged CPyStatic_currency___denoms___finney;
extern CPyTagged CPyStatic_currency___denoms___milliether;
extern CPyTagged CPyStatic_currency___denoms___milli;
extern CPyTagged CPyStatic_currency___denoms___ether;
extern CPyTagged CPyStatic_currency___denoms___kether;
extern CPyTagged CPyStatic_currency___denoms___grand;
extern CPyTagged CPyStatic_currency___denoms___mether;
extern CPyTagged CPyStatic_currency___denoms___gether;
extern CPyTagged CPyStatic_currency___denoms___tether;
extern PyTypeObject *CPyType_currency___denoms;
extern PyObject *CPyDef_currency___denoms(void);
extern char CPyDef_currency___denoms_____mypyc_defaults_setup(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_currency___denoms_____mypyc_defaults_setup(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_currency___from_wei(CPyTagged cpy_r_number, PyObject *cpy_r_unit);
extern PyObject *CPyPy_currency___from_wei(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern CPyTagged CPyDef_currency___to_wei(PyObject *cpy_r_number, PyObject *cpy_r_unit);
extern PyObject *CPyPy_currency___to_wei(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_currency_____top_level__(void);
extern PyObject *CPyDef_debug___pip_freeze(void);
extern PyObject *CPyPy_debug___pip_freeze(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_debug___python_version(void);
extern PyObject *CPyPy_debug___python_version(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_debug___platform_info(void);
extern PyObject *CPyPy_debug___platform_info(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_debug___get_environment_summary(void);
extern PyObject *CPyPy_debug___get_environment_summary(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_debug_____top_level__(void);
extern PyTypeObject *CPyType_decorators___combomethod;
extern PyObject *CPyDef_decorators___combomethod(PyObject *cpy_r_method);
extern PyTypeObject *CPyType_decorators_____get___3_combomethod_env;
extern PyObject *CPyDef_decorators_____get___3_combomethod_env(void);
extern PyTypeObject *CPyType_decorators____wrapper___3_get___3_combomethod_obj;
extern PyObject *CPyDef_decorators____wrapper___3_get___3_combomethod_obj(void);
extern PyTypeObject *CPyType_decorators___return_arg_type_env;
extern PyObject *CPyDef_decorators___return_arg_type_env(void);
extern PyTypeObject *CPyType_decorators___decorator_return_arg_type_env;
extern PyObject *CPyDef_decorators___decorator_return_arg_type_env(void);
extern PyTypeObject *CPyType_decorators___decorator_return_arg_type_obj;
extern PyObject *CPyDef_decorators___decorator_return_arg_type_obj(void);
extern PyTypeObject *CPyType_decorators___wrapper_return_arg_type_decorator_obj;
extern PyObject *CPyDef_decorators___wrapper_return_arg_type_decorator_obj(void);
extern PyTypeObject *CPyType_decorators___replace_exceptions_env;
extern PyObject *CPyDef_decorators___replace_exceptions_env(void);
extern PyTypeObject *CPyType_decorators___decorator_replace_exceptions_env;
extern PyObject *CPyDef_decorators___decorator_replace_exceptions_env(void);
extern PyTypeObject *CPyType_decorators___decorator_replace_exceptions_obj;
extern PyObject *CPyDef_decorators___decorator_replace_exceptions_obj(void);
extern PyTypeObject *CPyType_decorators___wrapped_replace_exceptions_decorator_obj;
extern PyObject *CPyDef_decorators___wrapped_replace_exceptions_decorator_obj(void);
extern char CPyDef_decorators___combomethod_____init__(PyObject *cpy_r_self, PyObject *cpy_r_method);
extern PyObject *CPyPy_decorators___combomethod_____init__(PyObject *self, PyObject *args, PyObject *kw);
extern PyObject *CPyDef_decorators____wrapper___3_get___3_combomethod_obj_____get__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_instance, PyObject *cpy_r_owner);
extern PyObject *CPyPy_decorators____wrapper___3_get___3_combomethod_obj_____get__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_decorators____wrapper___3_get___3_combomethod_obj_____call__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_args, PyObject *cpy_r_kwargs);
extern PyObject *CPyPy_decorators____wrapper___3_get___3_combomethod_obj_____call__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_decorators___combomethod_____get__(PyObject *cpy_r_self, PyObject *cpy_r_obj, PyObject *cpy_r_objtype);
extern PyObject *CPyPy_decorators___combomethod_____get__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_decorators___wrapper_return_arg_type_decorator_obj_____get__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_instance, PyObject *cpy_r_owner);
extern PyObject *CPyPy_decorators___wrapper_return_arg_type_decorator_obj_____get__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_decorators___wrapper_return_arg_type_decorator_obj_____call__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_args, PyObject *cpy_r_kwargs);
extern PyObject *CPyPy_decorators___wrapper_return_arg_type_decorator_obj_____call__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_decorators___decorator_return_arg_type_obj_____get__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_instance, PyObject *cpy_r_owner);
extern PyObject *CPyPy_decorators___decorator_return_arg_type_obj_____get__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_decorators___decorator_return_arg_type_obj_____call__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_to_wrap);
extern PyObject *CPyPy_decorators___decorator_return_arg_type_obj_____call__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_decorators___return_arg_type(CPyTagged cpy_r_at_position);
extern PyObject *CPyPy_decorators___return_arg_type(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_decorators___wrapped_replace_exceptions_decorator_obj_____get__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_instance, PyObject *cpy_r_owner);
extern PyObject *CPyPy_decorators___wrapped_replace_exceptions_decorator_obj_____get__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_decorators___wrapped_replace_exceptions_decorator_obj_____call__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_args, PyObject *cpy_r_kwargs);
extern PyObject *CPyPy_decorators___wrapped_replace_exceptions_decorator_obj_____call__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_decorators___decorator_replace_exceptions_obj_____get__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_instance, PyObject *cpy_r_owner);
extern PyObject *CPyPy_decorators___decorator_replace_exceptions_obj_____get__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_decorators___decorator_replace_exceptions_obj_____call__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_to_wrap);
extern PyObject *CPyPy_decorators___decorator_replace_exceptions_obj_____call__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_decorators___replace_exceptions(PyObject *cpy_r_old_to_new_exceptions);
extern PyObject *CPyPy_decorators___replace_exceptions(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_decorators_____top_level__(void);
extern PyObject *CPyDef_encoding___int_to_big_endian(CPyTagged cpy_r_value);
extern PyObject *CPyPy_encoding___int_to_big_endian(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern CPyTagged CPyDef_encoding___big_endian_to_int(PyObject *cpy_r_value);
extern PyObject *CPyPy_encoding___big_endian_to_int(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_encoding_____top_level__(void);
extern PyTypeObject *CPyType_exceptions___ValidationError;
extern char CPyDef_exceptions_____top_level__(void);
extern PyTypeObject *CPyType_functional___combine_env;
extern PyObject *CPyDef_functional___combine_env(void);
extern PyTypeObject *CPyType_functional___combined_combine_obj;
extern PyObject *CPyDef_functional___combined_combine_obj(void);
extern PyTypeObject *CPyType_functional___apply_to_return_value_env;
extern PyObject *CPyDef_functional___apply_to_return_value_env(void);
extern PyTypeObject *CPyType_functional___outer_apply_to_return_value_env;
extern PyObject *CPyDef_functional___outer_apply_to_return_value_env(void);
extern PyTypeObject *CPyType_functional___outer_apply_to_return_value_obj;
extern PyObject *CPyDef_functional___outer_apply_to_return_value_obj(void);
extern PyTypeObject *CPyType_functional___inner_apply_to_return_value_outer_obj;
extern PyObject *CPyDef_functional___inner_apply_to_return_value_outer_obj(void);
extern PyTypeObject *CPyType_functional___to_tuple_env;
extern PyObject *CPyDef_functional___to_tuple_env(void);
extern PyTypeObject *CPyType_functional___to_tuple_wrap_to_tuple_obj;
extern PyObject *CPyDef_functional___to_tuple_wrap_to_tuple_obj(void);
extern PyTypeObject *CPyType_functional___to_list_env;
extern PyObject *CPyDef_functional___to_list_env(void);
extern PyTypeObject *CPyType_functional___to_list_wrap_to_list_obj;
extern PyObject *CPyDef_functional___to_list_wrap_to_list_obj(void);
extern PyTypeObject *CPyType_functional___to_set_env;
extern PyObject *CPyDef_functional___to_set_env(void);
extern PyTypeObject *CPyType_functional___to_set_wrap_to_set_obj;
extern PyObject *CPyDef_functional___to_set_wrap_to_set_obj(void);
extern PyTypeObject *CPyType_functional___to_dict_env;
extern PyObject *CPyDef_functional___to_dict_env(void);
extern PyTypeObject *CPyType_functional___to_dict_wrap_to_dict_obj;
extern PyObject *CPyDef_functional___to_dict_wrap_to_dict_obj(void);
extern PyObject *CPyDef_functional___identity(PyObject *cpy_r_value);
extern PyObject *CPyPy_functional___identity(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_functional___combined_combine_obj_____get__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_instance, PyObject *cpy_r_owner);
extern PyObject *CPyPy_functional___combined_combine_obj_____get__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_functional___combined_combine_obj_____call__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_x);
extern PyObject *CPyPy_functional___combined_combine_obj_____call__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_functional___combine(PyObject *cpy_r_f, PyObject *cpy_r_g);
extern PyObject *CPyPy_functional___combine(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_functional___inner_apply_to_return_value_outer_obj_____get__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_instance, PyObject *cpy_r_owner);
extern PyObject *CPyPy_functional___inner_apply_to_return_value_outer_obj_____get__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_functional___inner_apply_to_return_value_outer_obj_____call__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_args, PyObject *cpy_r_kwargs);
extern PyObject *CPyPy_functional___inner_apply_to_return_value_outer_obj_____call__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_functional___outer_apply_to_return_value_obj_____get__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_instance, PyObject *cpy_r_owner);
extern PyObject *CPyPy_functional___outer_apply_to_return_value_obj_____get__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_functional___outer_apply_to_return_value_obj_____call__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_fn);
extern PyObject *CPyPy_functional___outer_apply_to_return_value_obj_____call__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_functional___apply_to_return_value(PyObject *cpy_r_callback);
extern PyObject *CPyPy_functional___apply_to_return_value(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_functional___to_tuple_wrap_to_tuple_obj_____get__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_instance, PyObject *cpy_r_owner);
extern PyObject *CPyPy_functional___to_tuple_wrap_to_tuple_obj_____get__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_functional___to_tuple_wrap_to_tuple_obj_____call__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_args, PyObject *cpy_r_kwargs);
extern PyObject *CPyPy_functional___to_tuple_wrap_to_tuple_obj_____call__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_functional___to_tuple(PyObject *cpy_r_fn);
extern PyObject *CPyPy_functional___to_tuple(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_functional___to_list_wrap_to_list_obj_____get__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_instance, PyObject *cpy_r_owner);
extern PyObject *CPyPy_functional___to_list_wrap_to_list_obj_____get__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_functional___to_list_wrap_to_list_obj_____call__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_args, PyObject *cpy_r_kwargs);
extern PyObject *CPyPy_functional___to_list_wrap_to_list_obj_____call__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_functional___to_list(PyObject *cpy_r_fn);
extern PyObject *CPyPy_functional___to_list(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_functional___to_set_wrap_to_set_obj_____get__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_instance, PyObject *cpy_r_owner);
extern PyObject *CPyPy_functional___to_set_wrap_to_set_obj_____get__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_functional___to_set_wrap_to_set_obj_____call__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_args, PyObject *cpy_r_kwargs);
extern PyObject *CPyPy_functional___to_set_wrap_to_set_obj_____call__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_functional___to_set(PyObject *cpy_r_fn);
extern PyObject *CPyPy_functional___to_set(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_functional___to_dict_wrap_to_dict_obj_____get__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_instance, PyObject *cpy_r_owner);
extern PyObject *CPyPy_functional___to_dict_wrap_to_dict_obj_____get__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_functional___to_dict_wrap_to_dict_obj_____call__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_args, PyObject *cpy_r_kwargs);
extern PyObject *CPyPy_functional___to_dict_wrap_to_dict_obj_____call__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_functional___to_dict(PyObject *cpy_r_fn);
extern PyObject *CPyPy_functional___to_dict(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_functional_____top_level__(void);
extern PyObject *CPyStatic_hexadecimal____HEX_REGEXP;
extern PyObject *CPyDef_hexadecimal___decode_hex(PyObject *cpy_r_value);
extern PyObject *CPyPy_hexadecimal___decode_hex(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_hexadecimal___encode_hex(PyObject *cpy_r_value);
extern PyObject *CPyPy_hexadecimal___encode_hex(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_hexadecimal___is_0x_prefixed(PyObject *cpy_r_value);
extern PyObject *CPyPy_hexadecimal___is_0x_prefixed(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_hexadecimal___remove_0x_prefix(PyObject *cpy_r_value);
extern PyObject *CPyPy_hexadecimal___remove_0x_prefix(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_hexadecimal___add_0x_prefix(PyObject *cpy_r_value);
extern PyObject *CPyPy_hexadecimal___add_0x_prefix(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_hexadecimal___is_hexstr(PyObject *cpy_r_value);
extern PyObject *CPyPy_hexadecimal___is_hexstr(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_hexadecimal___is_hex(PyObject *cpy_r_value);
extern PyObject *CPyPy_hexadecimal___is_hex(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_hexadecimal_____top_level__(void);
extern tuple_T7T2IOT2IOT2IOT2IOT2IOT2IOT2IO CPyStatic_humanize___UNITS;
extern PyTypeObject *CPyType_humanize____consume_leading_zero_units_gen;
extern PyObject *CPyDef_humanize____consume_leading_zero_units_gen(void);
extern PyTypeObject *CPyType_humanize____humanize_seconds_gen;
extern PyObject *CPyDef_humanize____humanize_seconds_gen(void);
extern PyTypeObject *CPyType_humanize____find_breakpoints_gen;
extern PyObject *CPyDef_humanize____find_breakpoints_gen(void);
extern PyTypeObject *CPyType_humanize____extract_integer_ranges_gen;
extern PyObject *CPyDef_humanize____extract_integer_ranges_gen(void);
extern PyObject *CPyDef_humanize___humanize_seconds(PyObject *cpy_r_seconds);
extern PyObject *CPyPy_humanize___humanize_seconds(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize____consume_leading_zero_units_gen_____mypyc_generator_helper__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback, PyObject *cpy_r_arg);
extern PyObject *CPyDef_humanize____consume_leading_zero_units_gen_____next__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_humanize____consume_leading_zero_units_gen_____next__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize____consume_leading_zero_units_gen___send(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_arg);
extern PyObject *CPyPy_humanize____consume_leading_zero_units_gen___send(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize____consume_leading_zero_units_gen_____iter__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_humanize____consume_leading_zero_units_gen_____iter__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize____consume_leading_zero_units_gen___throw(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback);
extern PyObject *CPyPy_humanize____consume_leading_zero_units_gen___throw(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize____consume_leading_zero_units_gen___close(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_humanize____consume_leading_zero_units_gen___close(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize____consume_leading_zero_units(PyObject *cpy_r_units_iter);
extern PyObject *CPyPy_humanize____consume_leading_zero_units(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize____humanize_seconds_gen_____mypyc_generator_helper__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback, PyObject *cpy_r_arg);
extern PyObject *CPyDef_humanize____humanize_seconds_gen_____next__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_humanize____humanize_seconds_gen_____next__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize____humanize_seconds_gen___send(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_arg);
extern PyObject *CPyPy_humanize____humanize_seconds_gen___send(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize____humanize_seconds_gen_____iter__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_humanize____humanize_seconds_gen_____iter__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize____humanize_seconds_gen___throw(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback);
extern PyObject *CPyPy_humanize____humanize_seconds_gen___throw(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize____humanize_seconds_gen___close(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_humanize____humanize_seconds_gen___close(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize____humanize_seconds(CPyTagged cpy_r_seconds);
extern PyObject *CPyPy_humanize____humanize_seconds(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize___humanize_bytes(PyObject *cpy_r_value);
extern PyObject *CPyPy_humanize___humanize_bytes(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize___humanize_hash(PyObject *cpy_r_value);
extern PyObject *CPyPy_humanize___humanize_hash(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize___humanize_ipfs_uri(PyObject *cpy_r_uri);
extern PyObject *CPyPy_humanize___humanize_ipfs_uri(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_humanize___is_ipfs_uri(PyObject *cpy_r_value);
extern PyObject *CPyPy_humanize___is_ipfs_uri(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_humanize____is_CIDv0_ipfs_hash(PyObject *cpy_r_ipfs_hash);
extern PyObject *CPyPy_humanize____is_CIDv0_ipfs_hash(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize____find_breakpoints_gen_____mypyc_generator_helper__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback, PyObject *cpy_r_arg);
extern PyObject *CPyDef_humanize____find_breakpoints_gen_____next__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_humanize____find_breakpoints_gen_____next__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize____find_breakpoints_gen___send(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_arg);
extern PyObject *CPyPy_humanize____find_breakpoints_gen___send(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize____find_breakpoints_gen_____iter__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_humanize____find_breakpoints_gen_____iter__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize____find_breakpoints_gen___throw(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback);
extern PyObject *CPyPy_humanize____find_breakpoints_gen___throw(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize____find_breakpoints_gen___close(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_humanize____find_breakpoints_gen___close(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize____find_breakpoints(PyObject *cpy_r_values);
extern PyObject *CPyPy_humanize____find_breakpoints(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize____extract_integer_ranges_gen_____mypyc_generator_helper__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback, PyObject *cpy_r_arg);
extern PyObject *CPyDef_humanize____extract_integer_ranges_gen_____next__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_humanize____extract_integer_ranges_gen_____next__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize____extract_integer_ranges_gen___send(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_arg);
extern PyObject *CPyPy_humanize____extract_integer_ranges_gen___send(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize____extract_integer_ranges_gen_____iter__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_humanize____extract_integer_ranges_gen_____iter__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize____extract_integer_ranges_gen___throw(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback);
extern PyObject *CPyPy_humanize____extract_integer_ranges_gen___throw(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize____extract_integer_ranges_gen___close(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_humanize____extract_integer_ranges_gen___close(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize____extract_integer_ranges(PyObject *cpy_r_values);
extern PyObject *CPyPy_humanize____extract_integer_ranges(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize____humanize_range(tuple_T2II cpy_r_bounds);
extern PyObject *CPyPy_humanize____humanize_range(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize___humanize_integer_sequence(PyObject *cpy_r_values_iter);
extern PyObject *CPyPy_humanize___humanize_integer_sequence(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_humanize___humanize_wei(CPyTagged cpy_r_number);
extern PyObject *CPyPy_humanize___humanize_wei(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_humanize_____top_level__(void);
extern PyObject *CPyDef_module_loading___import_string(PyObject *cpy_r_dotted_path);
extern PyObject *CPyPy_module_loading___import_string(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_module_loading_____top_level__(void);
extern char CPyDef_types___is_integer(PyObject *cpy_r_value);
extern PyObject *CPyPy_types___is_integer(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_types___is_bytes(PyObject *cpy_r_value);
extern PyObject *CPyPy_types___is_bytes(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_types___is_text(PyObject *cpy_r_value);
extern PyObject *CPyPy_types___is_text(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_types___is_string(PyObject *cpy_r_value);
extern PyObject *CPyPy_types___is_string(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_types___is_boolean(PyObject *cpy_r_value);
extern PyObject *CPyPy_types___is_boolean(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_types___is_dict(PyObject *cpy_r_obj);
extern PyObject *CPyPy_types___is_dict(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_types___is_list_like(PyObject *cpy_r_obj);
extern PyObject *CPyPy_types___is_list_like(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_types___is_list(PyObject *cpy_r_obj);
extern PyObject *CPyPy_types___is_list(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_types___is_tuple(PyObject *cpy_r_obj);
extern PyObject *CPyPy_types___is_tuple(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_types___is_null(PyObject *cpy_r_obj);
extern PyObject *CPyPy_types___is_null(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_types___is_number(PyObject *cpy_r_obj);
extern PyObject *CPyPy_types___is_number(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_types_____top_level__(void);
extern char CPyDef_units_____top_level__(void);
#endif
